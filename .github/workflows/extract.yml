name: Extract APIM Developer Portal Content

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name to commit changes'
        required: false
        default: 'feature/update'

jobs:
  extract_and_commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup PowerShell
        run: |
          sudo apt-get update
          sudo apt-get install -y powershell

      - name: Install Azure PowerShell module
        run: |
          pwsh -Command "Install-Module -Name Az -AllowClobber -Scope CurrentUser -Force"

      - name: Extract APIM Customizations
        run: |
          rm -rf developerPortalScripts/Extract/*
          pwsh -Command "./developerPortalScripts/extractDeveloperPortal.ps1 -ExportFolder 'developerPortalScripts/Extract' -AppId '${{ secrets.APIMAUTOMATIONIDENTITYCLIENTID }}' -Secret '${{ secrets.APIMAUTOMATIONIDENTITYCLIENTSECRET }}' -Tenant '${{ secrets.APIMAUTOMATIONIDENTITYTENANTID }}' -APIMName '${{ secrets.APIMNAMEDEV }}' -ResourceGroupName '${{ secrets.RESOURCEGROUPNAMEDEV }}'"
        shell: pwsh

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Determine Branch Name
        id: branch
        run: |
          BRANCH_NAME="${{ github.event.inputs.branch_name }}-${{ github.run_number }}"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "::set-output name=branch_name::$BRANCH_NAME"

      - name: Create New Branch
        run: |
          git fetch
          git checkout -b ${{ steps.branch.outputs.branch_name }}

      - name: Commit and Push Changes
        run: |
          git add .
          git commit -m "Extracted APIM customizations"
          $status = git status --porcelain
          if ($status -ne "") {
            echo "Changes detected, preparing to push..."
            # Only set the authorization header once, immediately before pushing
            git push origin ${{ steps.branch.outputs.branch_name }}
          } else {
            echo "No changes to commit."
          }
        shell: pwsh
